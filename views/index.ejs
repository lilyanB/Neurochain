<!DOCTYPE html>
<html lang="fr">
    <%- include('layouts/header'); -%>
    <body>
        <%- include('layouts/navbar'); -%>
        <!-- Page Header-->
        <header class="masthead" style="background-image: url('img/prod1.jpg')">
            <div class="container position-relative px-4 px-lg-5">
                <div class="row gx-4 gx-lg-5 justify-content-center">
                    <div class="col-md-10 col-lg-8 col-xl-7">
                        <div class="site-heading">
                            <h1>transaction</h1>
                            <span class="subheading">find your transaction</span>
                        </div>
                    </div>
                </div>
            </div>
        </header>
        <!-- Main Content-->
        <main class="mb-4">
        <div class="container px-4 px-lg-5">
            <div class="row gx-4 gx-lg-5 justify-content-center">
                <div class="col-md-10 col-lg-8 col-xl-7">
                    <!-- Post preview-->
                    <div class="post-preview">
                        <h2 class="post-title">search by ID</h2>
                    </div>
                    <div id="Formulaire">
                        <form action=“javascript:void(0);” id=IdTxForm>
                                <input type="text" name="IdTx" placeholder="ID" />
                                <testarea name="elemForm" id="message" placeholder="Message"></testarea>
                                <input onclick="afficherRep();" type="button" value="envoyer" />
                        </form>
                    </div>
                    <div id="reponse">
                        <p id="id"></p>
                        <p id="keypub"></p>
                        <p id="keypriv"></p>
                        <p id="previousBlockHash"></p>
                        <p id="blockId"></p>
                        <p id="dateBlock"></p>
                        <p id="nbrTx"></p>
                    </div>
                        <script>
                            function serialize(form) {
                                var output = {};
                                if (typeof form == 'object' && form.nodeName == "FORM") {
                                    var len = form.elements.length;
                                    
                                    for (var i = 0; i < len; i++) {
                                        var field = form.elements[i];
                                        if (field.name && !field.disabled && field.type != 'button' && field.type != 'file' && field.type != 'reset' && field.type != 'submit' /*&& field.type != 'hidden'*/) {
                                            var fieldName = field.name;
                                            var isArray = fieldName.includes("[]");
                                            if( isArray ) {
                                                fieldName = fieldName.replace("[]", "");
                                                
                                                if( !output[fieldName] ) {
                                                    output[fieldName] = [];
                                                }
                                            }
                                            if (field.type == 'select-multiple') {
                                                var l = form.elements[i].options.length;
                                                for (var j = 0; j < l; j++) {
                                                    if (field.options[j].selected) {
                                                        //output[encodeURIComponent(field.name)] = encodeURIComponent(field.options[j].value);
                                                        if( isArray ) {
                                                            output[fieldName].push(field.options[j].value); 
                                                        } else {
                                                            output[fieldName] = field.options[j].value;
                                                        }
                                                    }
                                                }
                                            }
                                            else if ((field.type != 'checkbox' && field.type != 'radio') || field.checked) {
                                                //output[encodeURIComponent(field.name)] = encodeURIComponent(field.value);
                                                
                                                if( isArray ) {
                                                    output[fieldName].push(field.value);    
                                                } else {
                                                    output[fieldName] = field.value;
                                                }
                                            }
                                        }
                                    }
                                }
                                return output;
                            };

                            function postAjax(url, data, success) {
                                var params = typeof data == 'string' ? data : Object.keys(data).map(
                                    function(k){ return encodeURIComponent(k) + '=' + encodeURIComponent(data[k]) }
                                ).join('&');

                                var xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject("Microsoft.XMLHTTP");
                                xhr.open('POST', url);
                                xhr.onreadystatechange = function() {
                                    if (xhr.readyState>3 && xhr.status==200) { 
                                        success(xhr); 
                                    }
                                };
                                xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
                                xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                                xhr.send(params);
                                return xhr;
                            }
                            


                            
                            function afficherRep() {
                                const form = document.getElementById("IdTxForm");
                                const formJson = serialize(form);
                                console.log(formJson);
                                const url = "http://" + window.location.hostname + ":" + window.location.port + "/posts";
                                postAjax(url, formJson, function(xhr) {
                                                            try {
                                                                const jsonData = JSON.parse(xhr.responseText);
                                                                const jsonDataBlock = jsonData.result;
                                                                const jsonDataTx = jsonData.bonId;
                                                                //console.log("callback return", jsonData);
                                                                const outputid = document.getElementById("id");
                                                                outputid.innerHTML = "vos recherches concerne l'ID : " + jsonDataBlock._id;

                                                                const outputid2 = document.getElementById("keypub");
                                                                outputid2.innerHTML = "votre public key est : " + jsonDataBlock.block.header.author.keyPub.rawData;
                                                                
                                                                const outputid3 = document.getElementById("keypriv");
                                                                outputid3.innerHTML = "votre private key est : " + jsonDataBlock.block.header.author.signature.data;

                                                                const outputid4 = document.getElementById("blockId");
                                                                outputid4.innerHTML = "votre block a l'id : " + jsonDataBlock.block.header.id.data;

                                                                
                                                                const outputid5 = document.getElementById("dateBlock");
                                                                outputid5.innerHTML = "votre block est de : " + jsonDataBlock.block.header.timestamp.data;

                                                                
                                                                const outputid6 = document.getElementById("nbrTx");
                                                                outputid6.innerHTML = "le nombre de transaction dans ce block est de : " + jsonDataTx[0].transaction.outputs;


                                                                //clé + valeur(type)
                                                            } catch(error) {
                                                                console.log(error);
                                                            }
                                                        });
                                //console.log(formJson);

                                /*
                                var params = typeof data == 'string' ? data : Object.keys(data).map(
                                        function(k){ return encodeURIComponent(k) + '=' + encodeURIComponent(data[k]) }
                                    ).join('&');

                                var xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject("Microsoft.XMLHTTP");
                                xhr.open('POST', url);
                                xhr.onreadystatechange = function() {
                                    if (xhr.readyState>3 && xhr.status==200) { success(xhr.responseText); }
                                };
                                xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
                                xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                                xhr.send(params);
                                return xhr;
                                */
                            }
                            
                            // example request
                            // postAjax('http://foo.bar/', 'p1=1&p2=Hello+World', function(data){ console.log(data); });
                            // postAjax('http://foo.bar/', { p1: 1, p2: 'Hello World' }, function(data){ console.log(data); });
                            // postAjax('http://foo.bar/', 'p1=1&p2=Hello+World', function(data){ console.log(data); });

                        </script>
                            <!-- page html ou ejs ou autre-->
                            <script>
                            function showOutput( aValue, outputDivId ) {
                                const ouputDiv = document.getElementById(outputDivId);
                                try {
                                    const url = `http://${window.location.hostname}:${window.location.port}/routes/posts`;
                                    const data = {
                                        IdTx: "myValue"
                                    }
                                    postAjax(url, data, function(xhr) { 
                                        const jsonData = JSON.parse(xhr.responseText);
                                        ouputDiv.innerHTML = jsonData.balance;
                                    });
                                } catch(error) {
                                    console.log(error);
                                }
                            }
                            
                            // Controller ou Router selon ton archi
                            router.post("/posts", async function(req, res, next) {
                                var outputData = { balance: 0 };
                                const inputIdTx = req.body.IdTx;
                                // ... processing
                                res.json(outputData);
                            });
                        </script>
                    </div>
                </div>
            </div>
        </div>
        </main>
        <%- include('layouts/footer'); -%>
        <%- include('layouts/scripts'); -%>
    </body>
</html>